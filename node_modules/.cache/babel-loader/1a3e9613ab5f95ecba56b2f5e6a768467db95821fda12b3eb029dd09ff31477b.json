{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nexport default function useData(type) {\n  _s();\n  //type name should be list category\n  const baseURL = `http://localhost:3002/${type}`; // dont use unne\n  const [items, setItems] = useState([]);\n  const fet = () => {\n    fetch(baseURL).then(res => res.json()).then(res => {\n      setItems([...res[type]]);\n    });\n  };\n  useEffect(() => {\n    fetCat();\n  });\n  return items;\n}\n_s(useData, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");","map":{"version":3,"names":["useState","useEffect","useData","type","_s","baseURL","items","setItems","fet","fetch","then","res","json","fetCat"],"sources":["/Users/adarshg/Desktop/tekion-interns-blinkit/blinkit/src/organisms/listing/HelperUseDataFetch.js"],"sourcesContent":["import {useState, useEffect} from 'react'\n\nexport default function useData(type) { //type name should be list category\nconst baseURL = `http://localhost:3002/${type}`; // dont use unne\nconst [items, setItems] = useState([]);\n\nconst fet = () => { fetch(baseURL)\n.then(res => res.json())\n.then((res) => {setItems([...res[type]])})\n}\nuseEffect(() => { fetCat() });\n    return items;\n}\n"],"mappings":";AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAEzC,eAAe,SAASC,OAAOA,CAACC,IAAI,EAAE;EAAAC,EAAA;EAAE;EACxC,MAAMC,OAAO,GAAI,yBAAwBF,IAAK,EAAC,CAAC,CAAC;EACjD,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,GAAG,GAAGA,CAAA,KAAM;IAAEC,KAAK,CAACJ,OAAO,CAAC,CACjCK,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAAEC,GAAG,IAAK;MAACJ,QAAQ,CAAC,CAAC,GAAGI,GAAG,CAACR,IAAI,CAAC,CAAC,CAAC;IAAA,CAAC,CAAC;EAC1C,CAAC;EACDF,SAAS,CAAC,MAAM;IAAEY,MAAM,EAAE;EAAC,CAAC,CAAC;EACzB,OAAOP,KAAK;AAChB;AAACF,EAAA,CAVuBF,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}