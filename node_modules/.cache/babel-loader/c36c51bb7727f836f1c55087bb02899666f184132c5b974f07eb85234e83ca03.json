{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nexport default function useData(type) {\n  _s();\n  //type name should be list category\n  const baseURL = `http://localhost:3002/${type}`; // dont use unnecessary variable\n  const [items, setItems] = useState([]);\n  const fetchItems = () => {\n    fetch(baseURL) //write it in helper function\n    .then(res => res.json()).then(res => {\n      setItems([...res[type]]); //use destructuring\n    }); //dont write inline function\n  }; //dont use res, instead use items by type\n\n  useEffect(() => {\n    fetchItems();\n  }, []);\n  return items;\n}\n_s(useData, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");","map":{"version":3,"names":["useState","useEffect","useData","type","_s","baseURL","items","setItems","fetchItems","fetch","then","res","json"],"sources":["/Users/adarshg/Desktop/tekion-interns-blinkit/blinkit/src/organisms/listing/helper.listing/HelperUseDataFetch.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport default function useData(type) {\n  //type name should be list category\n  const baseURL = `http://localhost:3002/${type}`; // dont use unnecessary variable\n  const [items, setItems] = useState([]);\n\n  \n  const fetchItems = () => {\n    fetch(baseURL) //write it in helper function\n      .then((res) => res.json())\n      .then((res) => {\n          setItems([...res[type]]); //use destructuring\n      }); //dont write inline function\n  }; //dont use res, instead use items by type\n\n  useEffect(() => {\n    fetchItems();\n  },[]);\n  return items;\n}\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,eAAe,SAASC,OAAOA,CAACC,IAAI,EAAE;EAAAC,EAAA;EACpC;EACA,MAAMC,OAAO,GAAI,yBAAwBF,IAAK,EAAC,CAAC,CAAC;EACjD,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAGtC,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACvBC,KAAK,CAACJ,OAAO,CAAC,CAAC;IAAA,CACZK,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEC,GAAG,IAAK;MACXJ,QAAQ,CAAC,CAAC,GAAGI,GAAG,CAACR,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC,CAAC;EACR,CAAC,CAAC,CAAC;;EAEHF,SAAS,CAAC,MAAM;IACdO,UAAU,EAAE;EACd,CAAC,EAAC,EAAE,CAAC;EACL,OAAOF,KAAK;AACd;AAACF,EAAA,CAlBuBF,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}